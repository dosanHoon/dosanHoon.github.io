{"data":{"site":{"siteMetadata":{"author":{"name":"한승훈","contacts":{"twitter":"#"}},"disqusShortname":"","subtitle":"프론트엔드 개발 기술 블로그","title":"Dosanhoon's blog","url":"https://dosanhoon.github.io/"}},"markdownRemark":{"id":"60266846-5e9c-5637-b084-bd597b28645d","html":"<h1>React 개발기 - 혹은 삽질기</h1>\n<p>React를 처음 접한지 2~3년 정도 됐는데 처음과 지금을 비교하면 많이도 변했다.<br>\n늘 처음이란게 그렇듯.<br>\n어설프고 es6 부터 시작해서 모든 것이 새로 웠다. 그래서 반면교사로 삼거나 재미삼아 변해온 과정에 대해서 간단하게 작성해보기로 했다.</p>\n<h2>1 단계 - React가 뭐야?</h2>\n<p>어떻게 보면 React를 접하게 된건 좋았지만, 빈부격차마냥 양극화가 심했던 당시 회사환경에서는 (뉴비 or 10년차) 표준에서 멀어지는 개발 환경이 될수 밖에 없었다. 소위 말하는 front-end 개발자도 지금 생각해보면 없었다.</p>\n<p>webpack 은 사용하지 않았고 jsx 형식으로 작성된 react component 들을 babel-cli로 파일마다 각각 js 파일로 compile 해서 사용 했고 React 같은 라이브러리들을 CDN 으로 html에서 import 해서 global 로 적용 됐다.</p>\n<p>또 웹서버는 GO 로 작성되어 있었고 같은 프로젝트내에 존재하다 보니 front-end 와 back-end 의 결합도가 높았고 back-end의 문제가 생겨도 front-end 개발 까지 영향을 끼치는 형태였다.</p>\n<p>지금 생각해보면 webpack 없이 SPA가 아닌 웹을 react 로 개발한다는건 너무나도 비효율적이다.<br>\n<del>아니 사실 그 당시에도 너무 별로였음</del></p>\n<h3>구현</h3>\n<h4>1. jsx</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> NoticePop <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  getInitialState<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      title<span class=\"token punctuation\">:</span> <span class=\"token constant\">NOTICE</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  getInitialProp<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      title<span class=\"token punctuation\">:</span> <span class=\"token constant\">NOTICE</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  componentDidMount<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>title <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>title <span class=\"token operator\">!=</span> undefined<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      state<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>refs<span class=\"token punctuation\">.</span>btn_ok<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  render<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token comment\">/**\n       * 중략\n      **/</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>React 는 html 에서 import 하기 때문에 jsx 파일내에서 import 할 필요가 없음</li>\n<li>각 component 가 위와같이 global 로 선언됨</li>\n<li>map 등 es6 의 몇몇 function 만 사용했을뿐 es5 문법으로 작성됨(이때는 facebook 가이드도 es5…)</li>\n</ul>\n<h4>2. html</h4>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n  <span class=\"token function\">_get_react_</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"babel/noticepop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">_get_react_</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"babel/components/lnb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">_get_react_</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"babel/components/footer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>이런식으로 각 html에서 필요한 react component js 파일들을 import 하여 사용함</li>\n</ul>\n<h4>3. js (util 성격의 script)</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  renderReactDOM<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>reactClass<span class=\"token punctuation\">,</span> elementid<span class=\"token punctuation\">,</span> param<span class=\"token punctuation\">,</span> createDiv<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> innerParam <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>param <span class=\"token operator\">==</span> <span class=\"token string\">''</span> <span class=\"token operator\">||</span> param <span class=\"token operator\">==</span> undefined <span class=\"token operator\">||</span> param <span class=\"token operator\">==</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      innerParam <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      innerParam <span class=\"token operator\">=</span> param\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>createDiv <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">createDivElement</span><span class=\"token punctuation\">(</span>elementid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>reactClass<span class=\"token punctuation\">,</span> innerParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span>elementid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<ul>\n<li>일반적인 javascript 나 라이브러리등을 html 에서 import 해서 사용함.</li>\n<li>이런식으로 javascript 에서 component 를 render 해서 사용하는 경우도 있었다.</li>\n<li>modal 팝업 등 instant 한 컴포넌트등을 이런식으로 다뤘다.</li>\n<li><del>개인적으론 절대 이렇게 안한다. 언어든 라이브러리등 그 특성에 맞게 사용하고 관점은 단일화하는게 개발시도 유지보수에도 좋다.</del></li>\n</ul>\n<h3>결론</h3>\n<ul>\n<li>react 이외의 것으로 작성된 프로젝트를 react 로 포팅하는 경우가 아니라면 위와같이 webpack 없이 파편화된 react 개발은 비효율적.<del>(그냥 절대 하지 마라)</del></li>\n<li>SPA 나 client rendering 의 단점은 상대적으로 큰 buldle file 과 초기 로딩 속도 이외에는 아직도 모르겠다.</li>\n<li><del>product 레벨에서 한 포인트에서의 에러가 전체에 영향을 줄수도 있다.(맞는말인지 아직 의문)</del></li>\n<li>back-end 개발과 front-end 개발은 분리해야 된다. 그래야 서로 편하다.</li>\n<li>개발 관점은 최대한으로 줄여라</li>\n<li><del>(기껏 react도입하고 다 기존의 script 에서 처리한다던가 이런걸 닭잡는데 소잡는 칼 쓴다고 하는거다.)</del></li>\n</ul>\n<h2>2 단계 es6,redux,requireJS 먹는건가요?</h2>\n<p>1단계 총체적 난국이었나면 지금부터는 과도기의 시작이다.<br>\n서버는 JAVA 로 변경 됐고, 파편화된 js 파일들을 import 하기 위해서 requireJs 를 도입.<br>\n전역적인 state 관리의 필요성으로 redux 도입.<br>\nes6 전반적인 도입등 있다.</p>\n<h3>구현</h3>\n<h4>jsx</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">requirejs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"redux/redux\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"constants/gnb\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"components/popup\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>\n  Redux<span class=\"token punctuation\">,</span>\n  Gnb<span class=\"token punctuation\">,</span>\n  Popup\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> Router <span class=\"token operator\">=</span> ReactRouter<span class=\"token punctuation\">.</span>Router<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> Route <span class=\"token operator\">=</span> ReactRouter<span class=\"token punctuation\">.</span>Route<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> IndexRoute <span class=\"token operator\">=</span> ReactRouter<span class=\"token punctuation\">.</span>IndexRoute<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> Link <span class=\"token operator\">=</span> ReactRouter<span class=\"token punctuation\">.</span>Link<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> Switch <span class=\"token operator\">=</span> ReactRouter<span class=\"token punctuation\">.</span>Switch<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> browserHistory <span class=\"token operator\">=</span> ReactRouter<span class=\"token punctuation\">.</span>browserHistory<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> Redirect <span class=\"token operator\">=</span> ReactRouter<span class=\"token punctuation\">.</span>Redirect<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> loginFlag <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Router</span> <span class=\"token attr-name\">history</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>browserHistory<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Route</span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/*/*/*/inweb/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">component</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>Container<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>IndexRoute</span> <span class=\"token attr-name\">component</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>MainBannerContainer<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Route</span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>index<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">component</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>MainBannerContainer<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Route</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Router</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">Container</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">componentWillMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>AutoAlert<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onSETALERT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          alertTitle<span class=\"token punctuation\">:</span> AutoAlert\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onALERTOPEN</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">componentWillUpdate</span><span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">,</span> nextState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>location <span class=\"token operator\">!=</span> nextProps<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onALERTCLOSE</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 중략</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  Popup <span class=\"token operator\">=</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>\n    mapStateToProps<span class=\"token punctuation\">,</span>\n    mapDispatchToProps\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>Popup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  App <span class=\"token operator\">=</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>\n    mapStateToProps<span class=\"token punctuation\">,</span>\n    mapDispatchToProps\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Provider</span> <span class=\"token attr-name\">store</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">REDUX_STORE</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>App</span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Provider</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mainContainer\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>결론</h3>\n<ul>\n<li>requireJS 사용으로 component 나 libaray 모듈 관리가 편해졌다.</li>\n<li>SPA로 Redux 사용. 90% 이상 React 내에서 개발.</li>\n<li>여전히 Back-end 와 Front-end 결합도 높음.</li>\n</ul>\n<h2>3 단계 React 스럽게? <del>(삽질은 그만 ㅠ ㅠ)</del></h2>\n<p>이직 후 첫 프로젝트.<br>\n이번 프로젝트 부터는 본인의 자유도가 높아졌고 좀 더 내가 옳다는 방향 혹은 해보고 싶은 방향으로 할수 있었다.<br>\n웹 서버는 Java spring boot 였고, API 서버들이 별도로 존재해 AJAX 를 통해서 데이터만 주고 받을뿐 웹서버의 역활이 기존 프로젝트에 비해 거의 없어졌다. Back-end 영역에서도 좀 더 모던해졌다고 할수 있겠다.</p>\n<p>front-end 즉 React 에서는 creat-react-app 을 사용했기에 webpack-dev-server 로 좀 더 빠르게 개발 할 수 있었다. 전역 state 관리 라이브러리는 mobx 를 도입했고 SPA 로 개발하였다.</p>\n<h3>구성</h3>\n<h4>1. React Component</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">//LIB</span>\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BrowserRouter <span class=\"token keyword\">as</span> Router<span class=\"token punctuation\">,</span> Switch <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Provider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"mobx-react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Redirect <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router/Redirect\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//UTILS</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getURI<span class=\"token punctuation\">,</span> UIset <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./utils\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DefaultLayout <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./containers\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> mobxStore <span class=\"token keyword\">from</span> <span class=\"token string\">\"./mobx\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    mobxStore<span class=\"token punctuation\">.</span>codeStore<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> cookieStore <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> mobxStore<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Provider</span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">mobxStore</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Router</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Switch</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PropsRoute</span>\n              <span class=\"token attr-name\">UIset</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>UIset<span class=\"token punctuation\">[</span><span class=\"token string\">\"login\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">exact</span>\n              <span class=\"token attr-name\">path</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">getURI</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">component</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>\n                <span class=\"token operator\">!</span>cookieStore<span class=\"token punctuation\">.</span><span class=\"token function\">checkIsLogin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> LoginContainer <span class=\"token punctuation\">:</span> Redirect\n              <span class=\"token punctuation\">}</span></span>\n            <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Switch</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Router</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Provider</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>2. model</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Code <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../components/index\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Model</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> key <span class=\"token keyword\">in</span> params<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> params<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fullName <span class=\"token operator\">=</span> params<span class=\"token punctuation\">.</span>firstName <span class=\"token operator\">=</span> params<span class=\"token punctuation\">.</span>lastName<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  userName <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  @vaildEmail\n  userEmail <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  fullName <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Model<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>entity 정보 모델</li>\n<li>state 기본값 정의 등</li>\n<li>validation 과 서버 DATA 가공하여 표현</li>\n</ul>\n<h4>3. mobx</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> observable<span class=\"token punctuation\">,</span> action <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"mobx\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> userApis <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../apis\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">cookieStore</span> <span class=\"token punctuation\">{</span>\n  @observable\n  isLogin <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n  @action\n  <span class=\"token function-variable function\">setLogin</span> <span class=\"token operator\">=</span> params <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> userApis<span class=\"token punctuation\">.</span><span class=\"token function\">setLogin</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkIsLogin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  @action\n  <span class=\"token function-variable function\">setLogout</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    userApis<span class=\"token punctuation\">.</span><span class=\"token function\">setLogout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isLogin <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">cookieStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>전역적인 state 관리</li>\n<li>api 호출</li>\n</ul>\n<h4>4. apis</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> axiosModules <span class=\"token keyword\">from</span> <span class=\"token string\">\"./axiosSetting\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> userApis <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  getUserInfo<span class=\"token punctuation\">:</span> userId <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> axiosModules<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`/user/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>userId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> accountApis<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>api 메소드 정의</li>\n</ul>\n<h3>결론</h3>\n<ul>\n<li>Back-end 와 Front-end 프로젝트로 분리로 개발이 한층 편해졌고 각자의 분야에 집중할수 있었다.</li>\n<li>Webpack으로 인해 model,apis 등 util성 script 들도 모듈화 하고 관리가 편해짐.</li>\n<li>최대한 React 내부에서 처리할수 있도록 했고 구조화 설계를 정립했다.</li>\n<li><del>(Java개발과 컨퍼런스에서 봤던게 많이 도움이 됨)</del></li>\n<li>Redux 에서 Mobx 로 교체한 이유는 Mobx 가 좀 더 배우기 쉽고 직관적이다.</li>\n</ul>\n<h2>4 단계 앞으로 해야 될 것들</h2>\n<h4>아직도 초기 로딩이 느리다.</h4>\n<ul>\n<li>\n<p>SSR(Server Side Rendering)</p>\n<ul>\n<li>초기 페이지 진입은 이거 말고는 답이 없어 보인다.</li>\n<li>SEO 를 위해서도 필요할듯</li>\n</ul>\n</li>\n<li>\n<p>ServiceWorker</p>\n<ul>\n<li>브라우저내에서 캐싱해서 PWA 같이 작동이 가능해 보임.</li>\n<li>webnotification 등에서 필수적으로 사용해야 할듯.</li>\n</ul>\n</li>\n<li>\n<p>TDD,BDD,DDD..</p>\n<ul>\n<li><del>먹는건가요?</del></li>\n<li><del>약파는거 같기도 하지만 front-end 구인 정보만 보면 점점 필수가 되어 가는듯.</del></li>\n</ul>\n</li>\n<li>Typescript</li>\n<li>Code Splitting, Dynamic Import 등등등…</li>\n</ul>\n<p><del>갈길이 멀다…</del></p>\n<h2>후기</h2>\n<p>처음에 비해선 많이 발전한거 같아서 뿌듯하면서도 불필요한 삽집을 한거 같아 보이기도 한다.<br>\n당신은 나보다는 좀 덜 삽질하기를 바라고 남들이 한다고 혹은 현재 유행이라고 무분별하게 도입하는것도 지양해야 되지만 현 시점에서 front-end 개발자라면 어느정도는 시류에 따를 필요가 있다고 생각한다.<br>\n어차피 당신이 능숙해지거나 product에서 문제점을 발견할때 쯤이면 새로운게 나와있을테니 …;;</p>","fields":{"tagSlugs":["/tag/javascript/","/tag/react/"]},"frontmatter":{"date":"2019-01-01T23:46:37.121Z","description":"그동안 React 로 개발하면서  겪은 시행착오 및 삽질기","tags":["javascript","react"],"title":"React 개발기 - 혹은 삽질기"}}},"pageContext":{"slug":"/posts/react-develop-diary"}}