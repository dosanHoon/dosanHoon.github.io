{"data":{"site":{"siteMetadata":{"author":{"name":"John Doe","contacts":{"twitter":"#"}},"disqusShortname":"","subtitle":"Pellentesque odio nisi, euismod in, pharetra a, ultricies in, diam. Sed arcu.","title":"Blog by John Doe","url":"https://lumen.netlify.com"}},"markdownRemark":{"id":"b2c6f142-2acb-5815-8dd6-821df3b7fab9","html":"<h1>Javascript 참조형 Deep copy</h1>\n<ul>\n<li>자바스크립트에서 Object 나 Array 는 참조형이다.</li>\n</ul>\n<h2>Array</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> newArray <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>oldArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> newArray <span class=\"token operator\">=</span> oldArray<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Object</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> newObject <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> oldObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>단순 값만 복사한다면 위에 방법중 골라서 하면 된다.</p>\n<p>다만 [{},{}] 나 {key:{},key:{}} 처럼</p>\n<p>원소 값 또한 참조형이면 값을 복제하더라고 원소가 참조형이기 때문에</p>\n<p>값을 변경하면 원본 자료도 값이 변경 된다.(자바스크립의 괴랄함..)</p>\n<p>이떄는 json 을 이용한 방식으로 하면 가능 하다.</p>\n<p>이외에도 함수로 구현하거나 lodash 등 자바스크립트 Superset 라이브러리등을 사용하는 방법 등이 있다.</p>\n<p>개인적으론 Deep copy는 한글로 복제 shallow copy 는 참조 라고 하는게 자연스러운것 같다.\n(prototype 과 property 모두를 복제 할려면 위 방법으로 해야 된다.)</p>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\">복제 알고리즘 참고</a></p>\n<p><a href=\"https://github.com/lodash/lodash/blob/4.17.5/lodash.js#L11078\">lodash deep clone 구현 코드</a></p>\n<p>위 내용 참고해보면 재밌다.</p>\n<p>알고리즘 사이트는 저런게 있는것도 처음 알았다는…</p>\n<p>추후 자바스크립에 deep copy 메소드가 추가 되면 좋겟다.</p>","fields":{"tagSlugs":["/tag/javascript/"]},"frontmatter":{"date":"2019-01-01T23:46:37.121Z","description":"Javascript 참조형 Deep copy","tags":["javascript"],"title":"Javascript 참조형 Deep copy"}}},"pageContext":{"slug":"/posts/javascript-deep-copy"}}