---
title: 기술 면접 후기 및 반성
date: "2019-03-05T23:46:37.121Z"
template: "post"
draft: false
slug: "/posts/interview-review"
category: "MOBX"
tags:
  - "javascript"
  - "react"
  - "mobx"
  - "기술면접"
description: "최근에 봤던 면접에 대해서 느낌점과 반성 그리고 앞으로 어떻게 활용할지에 대해서"
---

약 한달 동안 3군대 회사의 기술 면접을 봤다. 2군데 회사는 개발팀 면접만 진행됐고, 1군데는 하루에 개발팀 면접 + HR 팀 면접을 한번에 봤음. 결과는 모두 탈락... ~~(합격했다면 이직 후기를 쓰고 있었겟지)
서로 안맞았던 거라고 생각하면서 좌절은 하지 말고 발전의 기회로 삼기위해서 포스팅한다.

## 1. o모회사 기술 면접 + HR 면접

### 코드 리뷰

기술 면접은 내가 준비해간 코드를 바탕으로 코드 리뷰 형태로 진행됐고 리뷰 중간 중간 질문이 이어졌다. 거의 처음해보는 코드리뷰이다보니 부담스럽긴 했지만 그만큼 심사숙고해서 뽑겠다는거로 받아들이고 회사의 신뢰도가 올라감. 내가 만든 프로젝트의 구조 위주로 리뷰했는데 어떤 이슈사항에 대해서는 어떻게 처리할것인지 그런 것들은 고려가 되어있는지에 대한 질문이 많았다. 이 회사는 `redux`를 사용하고 있었고 나는 `mobx`를 사용하고 있었는데 `mobx`에 대해 사실 제대로 모르고 있었기 때문에 이슈사항에 대해서 얘기만 하고 해결책에 대해서는 제대로 답하지 못했던게 아쉽다. 그렇기 때문에 내가 `mobx` 가이드를 다시 읽게 된 계기가 되기도 했지만.

#### 관련해서 했던 질문들
* 불변성이란?  
리액트를 기준으로 데이터가 변경될때 비교를 쉽게 하기 위해 레퍼런스 타입을 아예 업데이트 해주는 것?
뭐 이런식으로 답했던거 같은데 아직도 난 불변성이 뭔지 모르겠다.

* store 를 어떻게 나누는가?  
사실 이건 어느 회사에서 했던 질문인지 기억이 안난다. domain 기준으로 나누는지 어떤 기준으로 만드는지 그런 내용이었는데 페이지를 기준으로 나눈다고 했던거 같다. 이건 내가 질문을 제대로 이해하지 못했던건지 대답을 아예 잘못했다. 페이지 기준이 아니라 도메인 기준으로 작성하고 있었는데 의식적이 아닌 무의식적으로 작성하다보니 생긴 문제 였다.

* component를 어떤 기준으로 나누는가?  
공통적인 요소를 기준으로 최우선적으로 나눈다라고 대답했었는데, 아마 원하는 대답은 render 최적화를 기준으로 나눈다는 대답이었던거 같다. 그래서 더 나눠야 된다는 건지 덜 나눠야 한다는 건지 이해를 못해서 약간 공격적으로 질문했던거 같다. 

* model 를 사용하는 것에 대해서 많이 물어봄.  
이건 아는지 모르는지 물어본다기 보다 내가 어떻게 사용하는지에 대해서 물어봤던거였고 그때 당시만 해도 모델의 용도가 애매했던 상황이라 약간 횡설 수설했던거 같다.


#### 자바스크립트 관련 질문

* `var`,`let`,`const` 에 대한 질문  
`var` 에 대해서 `global scope` 라고 대답했다. 사실 아닌거 같긴 했는데 답을 몰라서 어떻게 말했던거 같다.
면접관이 아닌거 같다고 해서 다시 물어보니 정답은 `function scope` 

* `li`같은 `dom node`를 화면에 렌더링 할떄 효율적으로 하는 방법  
jquery를 사용시 얘기 였던거 같은데 전혀 몰랐던 내용은 아니고 거의 기억의 저편 무의식쯤에 있던 내용.

#### 그외에 

* 네트워크 에러 코드에 관한 문제 (404,500)  
404와 page not found , 500 서버 에러 정도로 대답하고 나머지는 모른다고 했다. 아직도 모른다. 

* 디자이너와의 협업, 성능 향상에 관한 문제  
디자이너와의 협업 마크업 개발시 어떤 형태로 헀는지 에 대해서 대답했고 성능 향상은 약간 구라쳐서 대답했는데 당연히 안하는게 낫었다.

* `vue`, `react`, `angular`  
이 질문은 모든 회사에서 공통적으로 했던거 같다. 이력서에 내가 위 라이브러리 중에 `react` 선택했다라고 적었기 때문도 있을거다. 좀 더 그럴싸한 이유를 생각해내야 될거 같다. 사실 그때 당시에는 `react native`와 `react`에 대한 경험치로 인해서 결정한 이유가 크기 때문이다. 그리고 위 3개 라이브러리 각각의 철학에 대해 묻기도 했다. 대답은 못했음. 

* `redux` , `mobx`  
왜 `mobx`를 사용했는지에 대해 물어봤는데. 팀원들의 `learng curve`와 `redux`를 `store`나 `action` 추가 시 번잡스럽다고 대답했던거 같다. 그에 반해 `mobx`는 `observer`와 `observable`이 다 알아서 해준다고. 여기서 문제가 생겼는데 `vue`는 `sugar syntax`가 많아서 별로 인거 같다 라고 대답했었는데 그럼 `mobx`처럼 다 알아서 해주는 거랑 상충되는 거 아니냐 라는 질문이었는데 좀 당황해서 횡설수설했던거 같다.

이제와서 다시 정리하자면 팀원들의 `learng curve`라는 건 실제로 그 라이브러리가 쉬운지 어려운지도 있겠지만 현 상태에서 내가 그들을 리드하고 알려줘야 하는 입장일때의 `learng curve`이다. 우리 팀원은 `react`에 어느 정도 경험이 있었기 때문에 타 라이브러리가 그것을 뛰어넘을 정도가 아니라면 `react`를 선택하는게 이득이었고 `redux`같은 경우에는 개인적으로 너무 번잡스럽다고 생각한다. 상태 관리의 개념보다 그 툴의 사용법이 더 거대한 느낌. 그에 반해 `mobx`는 매우 심플하다. 나 포함 우리 팀의 수준을 고려한 선택이었다. `vue`같은 경우 `react`를 하면서 겪었던 문제점(`dom handler`) 등을 라이브러리 자체에서 api 메소드로 제공해주는데 처음에는 그런것들이 쉽다고 느껴졌지만 순수 javascript 로 구성된 `react`에 비해 `vue`자체 툴 사용법을 익혀야 하는 듯한 생각이 들어서 `react`를 더 선호 한다.

좀 더 그럴듯한 대답이 됐다.

### 후기
기술면접 + HR 면접 거의 3시간에 가까운 면접이라 일단 체력적으로 집중력을 유지 하기 힘들었고 코드 리뷰할때 많은 지적을 당한 느낌이어서 좀 감정적이었던거 같다..
불합격 결과도 전화로 받아서 그나마 면접 결과에 대한 피드백을 받았다. 
자바스크립트 베이스가 부족하고 리액트 위주로만 개발한것 같다는 피드백을 받았다. (HR에서는 좋았다는데 립서비스 일지도..)
`php` `jquery` 등의 레거시 서비스와 `react` `redux` 프로젝트가 공존하고 있는 회사 여서 `jquery`나 `javascript` 같은 베이스의 니즈가 컷던탓에 떨어진것도 있겠지만 `javascript` 자체에 대한 공부가 필요하다.

## 2. o모회사 기술 면접
흔히들 하는 온라인 알고리즘 테스트 후 면접을 봤다. 순서는 기억이 안나는데 리액트 `mobx` 자바스크립트 관련 질문 후 내가 제출한 알고리즘 테스트를 리뷰 했다.

* 오픈 소스 라이브러리를 선택하고 사용할때 고려해야될것에 대해서 질문  
사실 제일 유명한 즉 남들이 많이 사용하고 있는 것을 위주로 선택하고 사용해왔기때문에 그정도 수준에서 밖에 대답하지 못했던게 생각난다. 그래서 내가 면접관에게 재질문했고 버젼이나 크로스 브라우징 등 결국에는 안정성으로 귀결되는 답이었던거 같다.

* `closure`란?  
`java class` 처럼 중첨 함수에서 `scope`가 함수 생성 당시 `scope`를 가져오기 때문에 지역변수처럼 사용할수 있는 현상 그리고 이게 되는건 `javascript` 가 `prototype` 상속 방식이기 때문에 라고 대답했었고 면접관이 `prototype` 때문이냐고 의아해 했었다. 다시 한번 확인 해볼 필요가 있다.

### 알고리즘 테스트
내가 제출한 코드를 리뷰를 했는데 문제도 영어로 되어 있고 일주일 가량 지난 후 였기 때문에 사실 잘 기억이 안나서 애를 먹었다. 면접관이 성능 튜닝하는것에 대해 힌트를 줬고 관련되서 손코딩을 했다.
`const`를 사용하는것을 강조했는데 왜 그랬는지는 모르곘다. 알고리즘 o의 n승 같은 복잡도를 표현하는게 있다는 것을 들었다. 알고리즘 문제에 대해 정답을 알고 싶었는데 딱히 없는것 같아 더 어려운거 같다


## 3. o모회사 티타임(?)
시간상 제일 오래됐던 면접이라 기억이 잘안난다. 내가 지원했던 부서 말고 다른 부서에서 면접 제의가 왔었고 1차 2차 면접 전에 실무자와 티타임겸 면접을 봤다. 개인적으로 가장 편한 분위기 였고 편하게 대답했던것 같다. 기술 면접이라기보다는 팀 분위기와 잘맞는지를 보는거 같았고 `react`를 리딩해줄 사람을 뽑는것 같았다. 개발팀 분위기에 대해서 많이 물어볼수 있었고 페어 코딩을 한다고 했다. 실로 문화 충격이었다.


# 느낀점
최대한 솔직하게 말하려고 했고 모르는 것들이나 내가 틀렸다고 눈치를 주면 다시 물어봐서 어떻게든 알려고 한다는 어필을 했다고 생각한다. 그외에도 개발자로서 자기 계발을 중요시하고 협업을 위한 커뮤니케이션이나 코드 가독성 등을 중요하게 생각한다는 것도 장점이라고 생각해서 어필했다. 나 스스로 부족하다고 생각하기에 더 발전할 여지가 있는 사람이다라는 것을 어필하고 싶었는데 그럼에도 불구하고 결과가 안좋은건 내 실력이 부족했다는 얘기밖에 되지 않는 것 같다. 어쩔수 없는 거다. 될때까지 노력할수 밖에. 좀 더 철저하게 "면접"을 위해서 따로 준비해야 겠다는 생각을 한다.

내가 알고 있다고 생각하는것과 확실히 하는 것의 차이가 존재 한다는 것을 깨달았다.